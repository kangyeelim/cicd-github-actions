name: Docker-build-push
on:
  push:
    branches: [master, basic-api]
jobs:
  build-tag-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build images
        run: docker-compose -f "docker-compose.yml" up -d --build
      - name: Tag image
        run: docker tag basic-api-dotnet:latest ${{ secrets.DOCKER_HUB_USERNAME }}/basic-api-dotnet:latest
      - name: Push image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/basic-api-dotnet:latest
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-acces-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition cd-test --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: basic-api-dotnet
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/basic-api-dotnet:latest
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: cd-test
          cluster: cd-test-cluster
          wait-for-service-stability: true